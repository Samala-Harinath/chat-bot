{
  "version": 3,
  "sources": ["../scripts/react-shim.js", "../src/embed/widget.tsx", "../src/embed/ChatWidget.tsx"],
  "sourcesContent": ["import * as React from 'react';\r\nimport * as ReactDOM from 'react-dom/client';\r\n\r\nwindow.React = React;\r\nwindow.ReactDOM = ReactDOM; ", "import React from 'react';\r\nimport { createRoot } from 'react-dom/client';\r\nimport { ChatWidget } from './ChatWidget';\r\n\r\nconst initChatWidget = () => {\r\n  // Create container for widget\r\n  const container = document.createElement('div');\r\n  container.id = 'chat-widget-root';\r\n  document.body.appendChild(container);\r\n\r\n  // Create React root and render widget\r\n  const root = createRoot(container);\r\n  root.render(React.createElement(ChatWidget));\r\n};\r\n\r\n// Initialize widget when script loads\r\nif (typeof window !== 'undefined') {\r\n  if (document.readyState === 'loading') {\r\n    document.addEventListener('DOMContentLoaded', initChatWidget);\r\n  } else {\r\n    initChatWidget();\r\n  }\r\n} ", "import React from 'react';\r\n\r\n// SVG Icons as components\r\nconst MessageSquareIcon = () => (\r\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n    <path d=\"M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z\"/>\r\n  </svg>\r\n);\r\n\r\nconst XIcon = () => (\r\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n    <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\r\n    <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\r\n  </svg>\r\n);\r\n\r\nconst SendIcon = () => (\r\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n    <line x1=\"22\" y1=\"2\" x2=\"11\" y2=\"13\"></line>\r\n    <polygon points=\"22 2 15 22 11 13 2 9\"></polygon>\r\n  </svg>\r\n);\r\n\r\ninterface Message {\r\n  content: string;\r\n  isUser: boolean;\r\n  timestamp: string;\r\n}\r\n\r\nexport const ChatWidget: React.FC = () => {\r\n  // Replace destructured hooks with direct state assignments\r\n  const isOpenState = React.useState(false);\r\n  const isOpen = isOpenState[0];\r\n  const setIsOpen = isOpenState[1];\r\n\r\n  const messagesState = React.useState<Message[]>([{\r\n    content: 'Hi there! \uD83D\uDC4B How can I help you today?',\r\n    isUser: false,\r\n    timestamp: new Date().toLocaleTimeString([], {hour: '2-digit', minute: '2-digit'})\r\n  }]);\r\n  const messages = messagesState[0];\r\n  const setMessages = messagesState[1];\r\n\r\n  const inputValueState = React.useState('');\r\n  const inputValue = inputValueState[0];\r\n  const setInputValue = inputValueState[1];\r\n\r\n  const isTypingState = React.useState(false);\r\n  const isTyping = isTypingState[0];\r\n  const setIsTyping = isTypingState[1];\r\n\r\n  const messagesEndRef = React.useRef<HTMLDivElement>(null);\r\n\r\n  const scrollToBottom = () => {\r\n    if (messagesEndRef.current) {\r\n      messagesEndRef.current.scrollIntoView({ behavior: 'smooth' });\r\n    }\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  const sendMessage = async () => {\r\n    if (!inputValue.trim()) return;\r\n\r\n    const newMessage: Message = {\r\n      content: inputValue.trim(),\r\n      isUser: true,\r\n      timestamp: new Date().toLocaleTimeString([], {hour: '2-digit', minute: '2-digit'})\r\n    };\r\n\r\n    setMessages(function(prev) { return prev.concat([newMessage]); });\r\n    setInputValue('');\r\n    setIsTyping(true);\r\n\r\n    try {\r\n      const response = await fetch('https://chat-bot-lemon-eight.vercel.app/api/chat', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ message: newMessage.content })\r\n      });\r\n\r\n      const data = await response.json();\r\n      \r\n      setIsTyping(false);\r\n      setMessages(function(prev) {\r\n        return prev.concat([{\r\n          content: data.message || 'Sorry, I am not able to answer that question.',\r\n          isUser: false,\r\n          timestamp: new Date().toLocaleTimeString([], {hour: '2-digit', minute: '2-digit'})\r\n        }]);\r\n      });\r\n    } catch (error) {\r\n      setIsTyping(false);\r\n      setMessages(function(prev) {\r\n        return prev.concat([{\r\n          content: 'Sorry, there was an error processing your message. Please try again.',\r\n          isUser: false,\r\n          timestamp: new Date().toLocaleTimeString([], {hour: '2-digit', minute: '2-digit'})\r\n        }]);\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"fixed bottom-6 right-6 z-[9999] font-sans\">\r\n      {!isOpen && (\r\n        <button\r\n          onClick={function() { setIsOpen(true); }}\r\n          className=\"h-14 w-14 rounded-full bg-blue-600 text-white border-none shadow-lg hover:bg-blue-700 hover:scale-105 transition-all flex items-center justify-center\"\r\n        >\r\n          <MessageSquareIcon />\r\n        </button>\r\n      )}\r\n\r\n      {isOpen && (\r\n        <div className=\"w-96 h-[500px] bg-white rounded-xl shadow-2xl border border-gray-200 overflow-hidden\">\r\n          {/* Header */}\r\n          <div className=\"bg-gradient-to-r from-blue-600 to-blue-700 text-white p-4 flex items-center justify-between\">\r\n            <div className=\"flex items-center gap-3\">\r\n              <div className=\"w-8 h-8 bg-white/20 rounded-full flex items-center justify-center\">\r\n                <MessageSquareIcon />\r\n              </div>\r\n              <div>\r\n                <div className=\"font-semibold text-sm\">Chat Support</div>\r\n                <div className=\"text-xs opacity-90\">We're here to help</div>\r\n              </div>\r\n            </div>\r\n            <button\r\n              onClick={function() { setIsOpen(false); }}\r\n              className=\"bg-transparent border-none text-white cursor-pointer p-1 rounded opacity-80 hover:opacity-100 transition-opacity\"\r\n            >\r\n              <XIcon />\r\n            </button>\r\n          </div>\r\n\r\n          {/* Messages */}\r\n          <div className=\"h-80 overflow-y-auto p-4 bg-gray-50\">\r\n            {messages.map(function(msg, idx) {\r\n              return (\r\n                <div\r\n                  key={idx}\r\n                  className={\"flex \" + (msg.isUser ? \"justify-end\" : \"justify-start\") + \" mb-4\"}\r\n                >\r\n                  <div\r\n                    className={\"max-w-[80%] p-3 rounded-xl \" + (\r\n                      msg.isUser\r\n                        ? \"bg-blue-600 text-white rounded-br-sm\"\r\n                        : \"bg-gray-100 text-gray-700 rounded-bl-sm\"\r\n                    )}\r\n                  >\r\n                    <p className=\"m-0 leading-relaxed text-sm\">{msg.content}</p>\r\n                    <p className=\"mt-1 mb-0 text-xs opacity-70\">{msg.timestamp}</p>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n            {isTyping && (\r\n              <div className=\"flex items-center gap-2 mb-4 text-sm text-gray-500\">\r\n                <div className=\"flex gap-1\">\r\n                  <div className=\"w-2 h-2 bg-gray-400 rounded-full animate-bounce\" />\r\n                  <div className=\"w-2 h-2 bg-gray-400 rounded-full animate-bounce [animation-delay:0.2s]\" />\r\n                  <div className=\"w-2 h-2 bg-gray-400 rounded-full animate-bounce [animation-delay:0.4s]\" />\r\n                </div>\r\n                <span>Assistant is typing...</span>\r\n              </div>\r\n            )}\r\n            <div ref={messagesEndRef} />\r\n          </div>\r\n\r\n          {/* Input */}\r\n          <div className=\"p-4 border-t border-gray-200 bg-white\">\r\n            <div className=\"flex gap-2\">\r\n              <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={function(e) { setInputValue(e.target.value); }}\r\n                onKeyPress={function(e) { if (e.key === 'Enter') sendMessage(); }}\r\n                placeholder=\"Type your message...\"\r\n                className=\"flex-1 px-3 py-2 border border-gray-300 rounded-lg text-sm outline-none focus:border-blue-600 focus:ring-2 focus:ring-blue-100 transition-all\"\r\n              />\r\n              <button\r\n                onClick={sendMessage}\r\n                className=\"bg-blue-600 text-white border-none px-3 py-2 rounded-lg hover:bg-blue-700 transition-colors flex items-center justify-center\"\r\n              >\r\n                <SendIcon />\r\n              </button>\r\n            </div>\r\n            <p className=\"mt-2 mb-0 text-xs text-gray-500\">Press Enter to send</p>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}; "],
  "mappings": "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",
  "names": ["React", "ReactDOM", "import_react", "import_client", "import_react", "MessageSquareIcon", "React", "XIcon", "SendIcon", "ChatWidget", "isOpenState", "isOpen", "setIsOpen", "messagesState", "messages", "setMessages", "inputValueState", "inputValue", "setInputValue", "isTypingState", "isTyping", "setIsTyping", "messagesEndRef", "scrollToBottom", "sendMessage", "newMessage", "prev", "data", "error", "msg", "idx", "e", "initChatWidget", "container", "React", "ChatWidget"]
}
